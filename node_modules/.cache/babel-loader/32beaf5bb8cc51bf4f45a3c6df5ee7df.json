{"remainingRequest":"/Users/satouatsushi/Documents/vue-cli-todo/node_modules/babel-loader/lib/index.js!/Users/satouatsushi/Documents/vue-cli-todo/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/satouatsushi/Documents/vue-cli-todo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/satouatsushi/Documents/vue-cli-todo/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/satouatsushi/Documents/vue-cli-todo/src/App.vue","mtime":1609227720946},{"path":"/Users/satouatsushi/Documents/vue-cli-todo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/satouatsushi/Documents/vue-cli-todo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/satouatsushi/Documents/vue-cli-todo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/satouatsushi/Documents/vue-cli-todo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport LikeHeader from './components/LikeHeader.vue';\nimport LikeNumber from './components/LikeNumber.vue';\nimport DatePicker from 'vuejs-datepicker';\nexport default {\n  components: {\n    LikeHeader,\n    LikeNumber,\n    DatePicker\n  },\n  name: 'app',\n\n  data() {\n    LikeHeader;\n    LikeNumber;\n    return {\n      addTitle: \"\",\n      addDate: \"\",\n      addId: \"4\",\n      // ラジオボタン-1にしてるとすべてにマークが入った状態（初期状態）\n      current: -1,\n      lists: [{\n        id: 1,\n        title: '会議資料の作成',\n        \"state\": 0,\n        check: false\n      }, {\n        id: 2,\n        title: '現場工程の段取り',\n        \"state\": 0,\n        check: false\n      }, {\n        id: 3,\n        title: '部品の手配',\n        \"state\": 0,\n        check: false\n      }],\n      // ラベルの各状態\n      options: [{\n        value: -1,\n        label: 'すべて'\n      }, {\n        value: 0,\n        label: '作業中'\n      }, {\n        value: 1,\n        label: '完了'\n      }]\n    };\n  },\n\n  methods: {\n    add() {\n      if (this.addTitle) {\n        this.lists.unshift({\n          //unshiftは配列の最初\n          title: this.addTitle,\n          //空\n          check: false,\n          //最初はチェックが外れてる\n          id: this.addId++,\n          state: 0\n        });\n      }\n\n      this.addTitle = \"\";\n    },\n\n    editToDo() {\n      let newTitle = window.prompt('以下内容で更新します。');\n\n      if (newTitle === '') {\n        alert('入力欄が空欄です。');\n      }\n\n      this.edit(newTitle);\n    },\n\n    edit(title) {\n      this.lists[0].title = title;\n    },\n\n    //  タスクの更新をします\n    remove(index) {\n      if (confirm('本当に削除しますか?')) {\n        this.lists.splice(index, 1); // １つだけ削除\n      }\n    },\n\n    // 状態変更の処理 list.stateの値を反転\n    doChangeState(list) {\n      list.state = !list.state ? 0 : 1;\n    }\n\n  },\n  // 追加ボタンは必須入力項目を入力しないと有効化されない\n  computed: {\n    addButtonDisabled() {\n      return this.addTitle.length === 0;\n    },\n\n    // リストの絞り込み\n    computedTodo() {\n      // データcurrentが-1ならすべて\n      // それ以外なら current と state が一致するものだけに絞り込む\n      return this.lists.filter(function (el) {\n        return this.current < 0 ? true : this.current === el.state;\n      }, this);\n    },\n\n    // 作業中・完了のラベルの表示\n    labels() {\n      return this.options.reduce(function (a, b) {\n        return Object.assign(a, {\n          [b.value]: b.label\n        });\n      }, {});\n    }\n\n  }\n};",{"version":3,"sources":["App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"main\">\n    <LikeHeader/>\n    <LikeNumber/>\n    <label v-for=\"(label,i) in options\" :key=\"i\">\n      <input type=\"radio\"\n      v-model=\"current\"\n      :value=\"label.value\">{{ label.label }}\n    </label>\n    <h1>{{ computedTodo.length }}件を表示中</h1><br>\n    <input type=\"text\" v-model=\"addTitle\" />\n    <button @click=\"add\" :disabled=\"addButtonDisabled\">タスクの追加</button>\n    <!-- 状態の変更ボタン -->\n    <button @click=\"doChangeState(list)\">{{ labels[list.state] }}</button>\n\n    <div style=\"cursor: pointer;\"\n    v-for=\"list in computedTodo\"  :key=\"list.id\">\n    {{list.id}}\n\n    <label :class=\"{checked: list.check}\">\n      <input type=\"checkbox\" v-model=\"list.check\"\n       />\n       <!-- {{ list.title + '（' + list.dueDate.toLocaleDateString() + '）' }} -->\n      <!-- <select v-model=\"list.check\">\n      <option value=\"kanryou\">完了</option>\n      <option value=\"mityak\">未着手</option>\n      <option value=\"totyu\">途中</option>\n      </select> -->\n      {{list.title}}\n    <button @click=\"remove(index)\">×</button>\n    <button @click=\"editToDo\">\n      <b-icon icon=\"arrow-counterclockwise\" \n      animation=\"spin-reverse\" font-scale=\"2\"\n      >\n      </b-icon>\n    </button>\n    </label>\n    </div>\n     <br>\n\n    <date-picker v-model=\"addDate\" type=\"date\" placeholder=\"期限\">\n    </date-picker>    \n    \n    \n  </div>\n</template>\n\n<script>\nimport LikeHeader from './components/LikeHeader.vue';\nimport LikeNumber from './components/LikeNumber.vue';\nimport DatePicker from 'vuejs-datepicker';\n\nexport default {\n  components: {\n    LikeHeader,\n    LikeNumber,\n    DatePicker,\n\n  },\n    name: 'app',\n  data() {\n    LikeHeader\n    LikeNumber\n      return {\n        addTitle: \"\",\n        addDate: \"\",\n        addId: \"4\",\n        // ラジオボタン-1にしてるとすべてにマークが入った状態（初期状態）\n        current: -1,\n      lists: [\n        { id: 1,  title: '会議資料の作成',\n         \"state\": 0,  check: false },\n        { id: 2,  title: '現場工程の段取り',\n         \"state\": 0,  check: false },\n        { id: 3,  title: '部品の手配',\n         \"state\": 0,  check: false },\n      ],\n      // ラベルの各状態\n      options: [\n        { value: -1, label: 'すべて'},\n        { value: 0, label: '作業中'},\n        { value: 1, label: '完了'},\n      ],\n        };\n          },\n\n  methods: {\n    add(){\n      if(this.addTitle){\n        this.lists.unshift({    //unshiftは配列の最初\n          title: this.addTitle, //空\n          check: false, //最初はチェックが外れてる\n          id: this.addId ++,\n          state: 0,\n        });\n      }\n      this.addTitle = \"\";\n    },\n    editToDo(){\n       let newTitle = window.prompt('以下内容で更新します。');\n       if(newTitle === ''){\n         alert('入力欄が空欄です。');\n       }\n       this.edit(newTitle);\n     },\n     edit(title){\n       this.lists[0].title = title;\n     },\n    //  タスクの更新をします\n    remove (index){\n      if (confirm('本当に削除しますか?')){\n        this.lists.splice(index,1);\n        // １つだけ削除\n      }\n    },\n    // 状態変更の処理 list.stateの値を反転\n    doChangeState (list){\n      list.state = !list.state ? 0 : 1\n    },\n  },\n  // 追加ボタンは必須入力項目を入力しないと有効化されない\n computed:{\n    addButtonDisabled(){\n      return this.addTitle.length === 0 ;\n    },\n    // リストの絞り込み\n    computedTodo(){\n      // データcurrentが-1ならすべて\n      // それ以外なら current と state が一致するものだけに絞り込む\n      return this.lists.filter(function(el){\n       return this.current < 0 ? true : this.current === el.state\n      },this)\n    },\n    // 作業中・完了のラベルの表示\n    labels(){\n      return this.options.reduce(function(a,b){\n        return Object.assign(a, { [b.value]: b.label})\n      },{})\n    }\n  }\n}\n\n</script>\n\n<style scoped>\n.checked{\n  text-decoration: line-through;\n}\n\n.circle {\n  width: 200px;\n  height: 200px;\n  margin: auto;\n  border-radius: 100px;\n  background-color: deeppink;\n}\n\n.fade-move{\ntransition: transform 1s;\n}\n\n.fade-enter {\n  /* 現れる時の最初の状態 */\n  opacity: 0;\n}\n.fade-enter-active {\n  /* 現れる時のトランジションの状態 */\n  transition: opacity 0.5s;\n}\n.fade-enter-to {\n  /* 現れる時の最後の状態 */\n  opacity: 1;\n}\n.fade-leave {\n  /* 消える時の最初の状態 */\n  opacity: 1;\n}\n.fade-leave-active {\n  /* 消える時のトランジションの状態 */\n  transition: opacity 1s;\n  position: absolute;\n  width: 200px;\n}\n.fade-leave-to {\n  /* 消える時の最後の状態 */\n  opacity: 0;\n}\n\n.slide-enter,\n.slide-leave-to {\n  opacity: 0;\n}\n\n.slide-enter-active {\n  animation: slide-in 0.5;\n  transition: opacity 5;\n}\n/* .slide-enter-to {\n\n} */\n/* .slide-leave {\n\n} */\n.slide-leave-active {\n  animation: slide-in 0.5s reverse;\n  transition: opacity 1s;\n}\n/* .slide-leave-to {\n\n} */\n\n@keyframes slide-in {\n  from {\n    transform: translateX(100px);\n  }\n  to {\n    transform: translateX(0);\n  }\n}\n\n.main {\n  width: 500px;\n  margin: auto;\n  text-align: center;\n  padding-top: 8rem;\n}\n\n</style>\n"],"sourceRoot":"src"}]}