'use strict';var helpers=require('./helpers-fe8dbfcf.js'),vue=require('vue'),index=require('./index-f3a4fb5b.js'),styleInject_es=require('./style-inject.es-06def3b0.js'),Grid_vue_vue_type_style_index_0_lang=require('./Grid.vue_vue&type=style&index=0&lang-c21310ab.js'),SvgIcon=require('./SvgIcon.js');/**
 * Gets the first element of `array`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @alias first
 * @category Array
 * @param {Array} array The array to query.
 * @returns {*} Returns the first element of `array`.
 * @example
 *
 * _.head([1, 2, 3]);
 * // => 1
 *
 * _.head([]);
 * // => undefined
 */
function head(array) {
  return (array && array.length) ? array[0] : undefined;
}

var head_1 = head;var _yearGroupCount = 12;
var script = {
  name: 'CalendarNav',
  emits: ['input'],
  components: {
    Grid: Grid_vue_vue_type_style_index_0_lang.s,
    SvgIcon: SvgIcon['default']
  },
  mixins: [index.j],
  props: {
    value: {
      type: Object,
      default: function _default() {
        return {
          month: 0,
          year: 0
        };
      }
    },
    validator: {
      type: Function,
      default: function _default() {
        return function () {
          return true;
        };
      }
    }
  },
  data: function data() {
    return {
      monthMode: true,
      yearIndex: 0,
      yearGroupIndex: 0,
      onSpaceOrEnter: helpers.C
    };
  },
  computed: {
    month: function month() {
      return this.value ? this.value.month || 0 : 0;
    },
    year: function year() {
      return this.value ? this.value.year || 0 : 0;
    },
    title: function title() {
      return this.monthMode ? this.yearIndex : "".concat(this.firstYear, " - ").concat(this.lastYear);
    },
    monthItems: function monthItems() {
      var _this = this;

      var _pageForDate = helpers.p(new Date()),
          thisMonth = _pageForDate.month,
          thisYear = _pageForDate.year;

      return this.locale.getMonthDates().map(function (d, i) {
        var month = i + 1;
        return {
          label: _this.locale.format(d, _this.masks.navMonths),
          ariaLabel: _this.locale.format(d, 'MMMM YYYY'),
          isActive: month === _this.month && _this.yearIndex === _this.year,
          isCurrent: month === thisMonth && _this.yearIndex === thisYear,
          isDisabled: !_this.validator({
            month: month,
            year: _this.yearIndex
          }),
          click: function click() {
            return _this.monthClick(month);
          }
        };
      });
    },
    yearItems: function yearItems() {
      var _this2 = this;

      var _pageForDate2 = helpers.p(new Date()),
          thisYear = _pageForDate2.year;

      var startYear = this.yearGroupIndex * _yearGroupCount;
      var endYear = startYear + _yearGroupCount;
      var items = [];

      var _loop = function _loop(year) {
        items.push({
          year: year,
          label: year,
          ariaLabel: year,
          isActive: year === _this2.year,
          isCurrent: year === thisYear,
          isDisabled: !_this2.validator({
            month: _this2.month,
            year: year
          }),
          click: function click() {
            return _this2.yearClick(year);
          }
        });
      };

      for (var year = startYear; year < endYear; year += 1) {
        _loop(year);
      }

      return items;
    },
    activeItems: function activeItems() {
      return this.monthMode ? this.monthItems : this.yearItems;
    },
    firstYear: function firstYear() {
      return head_1(this.yearItems.map(function (i) {
        return i.year;
      }));
    },
    lastYear: function lastYear() {
      return helpers.o(this.yearItems.map(function (i) {
        return i.year;
      }));
    }
  },
  watch: {
    year: function year() {
      this.yearIndex = this.year;
    },
    yearIndex: function yearIndex(val) {
      this.yearGroupIndex = this.getYearGroupIndex(val);
    }
  },
  created: function created() {
    this.yearIndex = this.year;
  },
  mounted: function mounted() {
    this.$refs.itemsGrid.tryFocus();
  },
  methods: {
    getItemClasses: function getItemClasses(_ref) {
      var isActive = _ref.isActive,
          isCurrent = _ref.isCurrent,
          isDisabled = _ref.isDisabled;
      var classes = ['vc-nav-item'];

      if (isActive) {
        classes.push('is-active', 'vc-grid-focus');
      } else if (isCurrent) {
        classes.push('is-inactive-current');
      } else {
        classes.push('is-inactive');
      }

      if (isDisabled) {
        classes.push('is-disabled');
      }

      return classes;
    },
    getYearGroupIndex: function getYearGroupIndex(year) {
      return Math.floor(year / _yearGroupCount);
    },
    monthClick: function monthClick(month) {
      this.$emit('input', {
        month: month,
        year: this.yearIndex
      });
    },
    yearClick: function yearClick(year) {
      this.yearIndex = year;
      this.monthMode = true;
      this.$refs.itemsGrid.tryFocus();
    },
    toggleMode: function toggleMode() {
      this.monthMode = !this.monthMode;
    },
    movePrev: function movePrev() {
      if (this.monthMode) {
        this.movePrevYear();
      }

      this.movePrevYearGroup();
    },
    moveNext: function moveNext() {
      if (this.monthMode) {
        this.moveNextYear();
      }

      this.moveNextYearGroup();
    },
    movePrevYear: function movePrevYear() {
      this.yearIndex--;
    },
    moveNextYear: function moveNextYear() {
      this.yearIndex++;
    },
    movePrevYearGroup: function movePrevYearGroup() {
      this.yearGroupIndex--;
    },
    moveNextYearGroup: function moveNextYearGroup() {
      this.yearGroupIndex++;
    },
    onHeaderRollover: function onHeaderRollover(e) {
      switch (e.direction) {
        case 'vertical-trailing':
          this.$refs.itemsGrid.tryFocus();
          break;
      }

      e.handled = true;
    },
    onItemsRollover: function onItemsRollover(e) {
      switch (e.direction) {
        case 'horizontal-leading':
          {
            this.movePrev();
            break;
          }

        case 'horizontal-trailing':
          {
            this.moveNext();
            break;
          }

        case 'vertical-leading':
          {
            this.$refs.headerGrid.tryFocus();
            e.handled = true;
            break;
          }

        case 'vertical-trailing':
          {
            e.handled = true;
            break;
          }
      }
    }
  }
};var _hoisted_1 = {
  class: "vc-nav-container"
};
function render(_ctx, _cache, $props, $setup, $data, $options) {
  var _component_svg_icon = vue.resolveComponent("svg-icon");

  var _component_grid = vue.resolveComponent("grid");

  return vue.openBlock(), vue.createBlock("div", _hoisted_1, [vue.createVNode(_component_grid, {
    items: ['prev', 'title', 'next'],
    columns: 3,
    ref: "headerGrid",
    onRollover: $options.onHeaderRollover
  }, {
    cell: vue.withCtx(function (_ref) {
      var item = _ref.item;
      return [item === 'prev' ? (vue.openBlock(), vue.createBlock("span", {
        key: 0,
        role: "button",
        class: "vc-nav-arrow is-left",
        tabindex: "-1",
        onClick: _cache[1] || (_cache[1] = function () {
          return $options.movePrev.apply($options, arguments);
        }),
        onKeydown: _cache[2] || (_cache[2] = function (e) {
          return $data.onSpaceOrEnter(e, $options.movePrev);
        }),
        ref: "prevButton"
      }, [vue.renderSlot(_ctx.$slots, "nav-left-button", {}, function () {
        return [vue.createVNode(_component_svg_icon, {
          name: "left-arrow",
          width: "20px",
          height: "24px"
        })];
      })], 544)) : item === 'title' ? (vue.openBlock(), vue.createBlock("span", {
        key: 1,
        role: "button",
        class: "vc-nav-title vc-grid-focus",
        style: {
          whiteSpace: 'nowrap'
        },
        tabindex: "0",
        onClick: _cache[3] || (_cache[3] = function () {
          return $options.toggleMode.apply($options, arguments);
        }),
        onKeydown: _cache[4] || (_cache[4] = function (e) {
          return $data.onSpaceOrEnter(e, $options.toggleMode);
        }),
        ref: "titleButton"
      }, vue.toDisplayString($options.title), 545)) : (vue.openBlock(), vue.createBlock("span", {
        key: 2,
        role: "button",
        class: "vc-nav-arrow is-right",
        tabindex: "-1",
        onClick: _cache[5] || (_cache[5] = function () {
          return $options.moveNext.apply($options, arguments);
        }),
        onKeydown: _cache[6] || (_cache[6] = function (e) {
          return $data.onSpaceOrEnter(e, $options.moveNext);
        }),
        ref: "nextButton"
      }, [vue.renderSlot(_ctx.$slots, "nav-right-button", {}, function () {
        return [vue.createVNode(_component_svg_icon, {
          name: "right-arrow",
          width: "20px",
          height: "24px"
        })];
      })], 544))];
    }),
    _: 1
  }, 8, ["onRollover"]), vue.createVNode(_component_grid, {
    items: $options.activeItems,
    rows: 4,
    columns: 3,
    gap: "2px 5px",
    ref: "itemsGrid",
    onRollover: $options.onItemsRollover
  }, {
    cell: vue.withCtx(function (_ref2) {
      var item = _ref2.item;
      return [vue.createVNode("span", {
        role: "button",
        "aria-label": item.ariaLabel,
        class: $options.getItemClasses(item),
        tabindex: item.isDisabled ? undefined : item.isActive ? 0 : -1,
        onClick: item.click,
        onKeydown: function onKeydown(e) {
          return $data.onSpaceOrEnter(e, item.click);
        }
      }, vue.toDisplayString(item.label), 43, ["aria-label", "tabindex", "onClick", "onKeydown"])];
    }),
    _: 1
  }, 8, ["items", "onRollover"])]);
}var css_248z = ".vc-nav-arrow {\r\n  display: -webkit-flex;\r\n  display: -ms-flexbox;\r\n  display: flex;\r\n  -webkit-justify-content: center;\r\n      -ms-flex-pack: center;\r\n          justify-content: center;\r\n  -webkit-align-items: center;\r\n      -ms-flex-align: center;\r\n          align-items: center;\r\n  line-height: var(--leading-snug);\r\n  border: 2px solid transparent;\r\n  border-radius: var(--rounded);\n}\n.vc-nav-arrow.is-left {\r\n    margin-right: auto;\n}\n.vc-nav-arrow.is-right {\r\n    margin-left: auto;\n}\n.vc-nav-arrow:hover {\r\n    background-color: var(--gray-900);\n}\n.vc-nav-arrow:focus {\r\n    border-color: var(--accent-600);\n}\n.vc-nav-title {\r\n  color: var(--accent-100);\r\n  font-weight: var(--font-bold);\r\n  line-height: var(--leading-snug);\r\n  padding: 4px 8px;\r\n  border-radius: var(--rounded);\r\n  border: 2px solid transparent;\n}\n.vc-nav-title:hover {\r\n    background-color: var(--gray-900);\n}\n.vc-nav-title:focus {\r\n    border-color: var(--accent-600);\n}\n.vc-nav-item {\r\n  width: 48px;\r\n  text-align: center;\r\n  line-height: var(--leading-snug);\r\n  font-weight: var(--font-semibold);\r\n  padding: 4px 0;\r\n  cursor: pointer;\r\n  border: 2px solid transparent;\r\n  border-radius: var(--rounded);\n}\n.vc-nav-item:hover {\r\n    color: var(--white);\r\n    background-color: var(--gray-900);\r\n    box-shadow: var(--shadow-inner);\n}\n.vc-nav-item:focus {\r\n    border-color: var(--accent-600);\n}\n.vc-nav-item.is-active {\r\n    color: var(--accent-900);\r\n    background: var(--accent-100);\r\n    border-color: transparent;\r\n    font-weight: var(--font-bold);\r\n    box-shadow: var(--shadow);\n}\n.vc-nav-item.is-inactive {\r\n    border-color: transparent;\n}\n.vc-nav-item:is-inactive-current {\r\n    color: var(--accent-100);\r\n    font-weight: var(--bold);\r\n    border-color: var(--accent-100);\n}\n.vc-nav-item.is-disabled {\r\n    opacity: 0.25;\r\n    pointer-events: none;\n}\n.vc-is-dark .vc-nav-title {\r\n    color: var(--gray-900);\n}\n.vc-is-dark .vc-nav-title:hover {\r\n      background-color: var(--gray-200);\n}\n.vc-is-dark .vc-nav-title:focus {\r\n      border-color: var(--accent-400);\n}\n.vc-is-dark .vc-nav-arrow:hover {\r\n      background-color: var(--gray-200);\n}\n.vc-is-dark .vc-nav-arrow:focus {\r\n      border-color: var(--accent-400);\n}\n.vc-is-dark .vc-nav-item:hover {\r\n      color: var(--gray-900);\r\n      background-color: var(--gray-200);\r\n      box-shadow: none;\n}\n.vc-is-dark .vc-nav-item:focus {\r\n      border-color: var(--accent-400);\n}\n.vc-is-dark .vc-nav-item.is-active {\r\n      color: var(--white);\r\n      background: var(--accent-500);\n}\n.vc-is-dark .vc-nav-item.is-inactive-current {\r\n      color: var(--accent-600);\r\n      border-color: var(--accent-500);\n}\n";
styleInject_es.s(css_248z);script.render = render;exports.h=head_1;exports.s=script;